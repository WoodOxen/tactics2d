name: Test Modules

on:
  - pull_request
  - workflow_dispatch

permissions:
  contents: read

jobs:
  test-modules:
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04, macos-13, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Check out private repository WoodOxen/trajectory_data_analysis
        uses: actions/checkout@v4
        with:
          repository: WoodOxen/trajectory_data_analysis
          token: ${{ secrets.TRAJ_DATA_SCP }}
          path: tactics2d/data

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies on all platforms
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements.txt
          pip install -v .

      - name: Run Pytest
        run: |
          mkdir -p ./tests/runtime
          pytest tests --cov=tests --cov-report=xml

      - name: Upload coverage to Codecov (Ubuntu only)
        if: runner.os == 'Linux'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  test-legacy-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ['ubuntu:18.04', 'ubuntu:20.04']
        python-version: ['3.8', '3.9']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Check out private repository WoodOxen/trajectory_data_analysis
        uses: actions/checkout@v4
        with:
          repository: WoodOxen/trajectory_data_analysis
          token: ${{ secrets.TRAJ_DATA_SCP }}
          path: tactics2d/data

      - name: Run tests in Docker (${{ matrix.image }})
        run: |
          docker pull ${{ matrix.image }}
          docker run --rm \
            -v $GITHUB_WORKSPACE:/tactics2d \
            ${{ matrix.image }} \
            /bin/bash -c '
              apt-get update && \
              apt-get install -y software-properties-common curl git && \
              if [[ "${{ matrix.image }}" == "ubuntu:18.04" ]]; then add-apt-repository -y ppa:deadsnakes/ppa; fi && \
              apt-get update && \
              apt-get install -y python${{ matrix.python-version }} python3-pip python${{ matrix.python-version }}-dev build-essential cmake && \
              cd /tactics2d && \
              python${{ matrix.python-version }} -m pip install --upgrade pip && \
              pip install -r tests/requirements.txt && \
              pip install -v . && \
              python${{ matrix.python-version }} -m pytest tests'
